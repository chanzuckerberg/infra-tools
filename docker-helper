#!/bin/bash

CMD="$1"

login()
{
    if ! [ -z "${AWS_PROFILE:-}" ]; then
        echo "ECR login in progress"
        $(aws ecr get-login --no-include-email)
    fi

    if ! [ [ -z "${DOCKER_USER:-}" ] || [ -z "${DOCKER_PASS:-}" ] ] ; then
        echo "Dockerhub login in progress"
        docker login -u $DOCKER_USER -p $DOCKER_PASS
    fi

    if ! [ [ -z "${GITHUB_USERNAME:-}" ] || [ -z "${GITHUB_TOKEN:-}" ] ] ; then
        echo "Github login in progress"
        docker login docker.pkg.github.com -u $GITHUB_USERNAME -p $GITHUB_TOKEN
    fi
}

case $CMD in
    build)
        REPO="$2"
        BUILD_PATH="$3"
        BRANCH=`echo $4 | sed 's/[\+\/]/-/g'`
        COMMIT="$5"
        BUILD_NUMBER="$6"
        CI_TAG="$REPO:ci"
        PROJ_NAME=$(basename $REPO)
        GITHUB_REPO="docker.pkg.github.com/$REPO/$PROJ_NAME"


        login

        docker pull $CI_TAG || true
        docker build --cache-from $CI_TAG -t $CI_TAG "$BUILD_PATH"


        docker tag $CI_TAG $REPO:"sha-$COMMIT"
        docker tag $CI_TAG $REPO:"branch-$BRANCH"
        docker tag $CI_TAG $REPO:"build-$BUILD_NUMBER"

        # if github token set
        if ! [ -z "${GITHUB_USERNAME:-}" ] || [ -z "${GITHUB_TOKEN:-}" ]; then
            docker tag $CI_TAG $GITHUB_REPO:"sha-$COMMIT"
            docker tag $CI_TAG $GITHUB_REPO:"branch-$BRANCH"
            docker tag $CI_TAG $GITHUB_REPO:"build-$BUILD_NUMBER"
        fi
    ;;
    push)
        REPO="$2"
        PROJ_NAME=$(basename $REPO)
        GITHUB_REPO="docker.pkg.github.com/$REPO/$PROJ_NAME"

        login

        # if dockerhub vars set, push dockerhub
        if ! [ -z "${DOCKER_USER:-}" ] || [ -z "${DOCKER_PASS:-}" ]; then
            echo "Pushing to Dockerhub"
            docker push $REPO
        fi

        # if github_user set, push to github
        if ! [ -z "${GITHUB_USERNAME:-}" ] || [ -z "${GITHUB_TOKEN:-}" ]; then
            echo "Pushing to Github Package Registry"
            docker push $GITHUB_REPO
            if [ $? -ne 0 ]; then
                echo "Push to $GITHUB_REPO failed"
            fi
        fi

    ;;
    *)
        echo "Unknown command $CMD"
        exit 1
esac
